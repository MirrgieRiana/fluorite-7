
assert_same : expected, actual -> actual === expected || EXIT(1);

"# Test 四則演算" => OUT;
(

  "## 数値" => OUT;
  assert_same(8; 6 + 2);
  assert_same(4; 6 - 2);
  assert_same(12; 6 * 2);
  assert_same(3; 6 / 2);

  "## 数値以外" => OUT;
  assert_same("62"; "6" + "2");
  assert_same("6666"; "6" * 4);

);

"# Test 変数" => OUT;
(

  "## :で変数を定義できる" => OUT;
  a : 5;
  assert_same(5; a);

  "## =で変数に代入できる" => OUT;
  a = 6;
  assert_same(6; a);

  "## 変数には型がない" => OUT;
  a = "aaa";
  assert_same("aaa"; a);

  "## 変数はスコープを持つ" => OUT;
  a = 7;
  (
    a : 8;
    assert_same(8; a);
    a = 9;
    assert_same(9; a);
  );
  assert_same(7; a);

  "## 同じ階層で同名の変数をいくつも定義できる" => OUT;
  a : 10;
  assert_same(10; a);

  "## 同じ階層で異なる名前の変数を定義できる" => OUT;
  b : 11;
  assert_same(11; b);

);






























